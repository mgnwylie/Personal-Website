blogdown::new_site()
file.edit(.Rprofile)
file.edit('.Rprofile')
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
install.packages("leaflet")
# load libraries
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=49.51, lat=--97.68)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=49.51, lat=-97.68)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=49.51, lat=-97.68)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=49.51, lat=97.68)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=49.510, lat=97.680)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=45.5017, lat=-36.852)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=45.5017, lat=73.5673)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=73.5673, lat=45.5017)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=45.5017, lat=-73.5673)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=45.5017, lat=73.5673)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=73.5673,lat=-45.5017)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=45.50884,lat=-73.58781)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-45.50884,lat=73.58781)
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=-106.3468, popup="The birthplace of R")
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=-106.3468, popup="The birthplace of R")
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=106.3468, popup="The birthplace of R")
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=106.3468, popup="The birthplace of R")
m
library(leaflet)
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=106.3468, popup="The birthplace of R")
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(-71.0382679, 42.3489054, zoom = 18)
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(56.1304, -106.3468, zoom = 18)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(56.1304, -106.3468, zoom = 18)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(56.1304, -106.3468, zoom = 18)
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=106.3468, popup="The birthplace of R")
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=106.3468, popup="The birthplace of R")
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=106.3468, popup="The birthplace of R")
m
m2 <- setView(map, lng, lat, zoom, options = list())
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=106.3468, popup="The birthplace of R")
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=56.1304,lat=106.3468, popup="The birthplace of R")
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles()  # Add default OpenStreetMap map tiles
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView()
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(56.1304, -106.3468)
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(56.1304, -106.3468, zoom = 18)
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 25)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(56.1304, -106.3468, zoom = 18)
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 25)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(56.1304, -106.3468, zoom = 7)
m
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 25)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(56.1304, -106.3468, zoom = 18)
m
library(knitr)
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 25)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(56.1304, -106.3468, zoom = 18)
m
m2 <- leaflet(
options = leafletOptions(
zoomControl = FALSE ,
minZoom = 2 , maxZoom = 2 ,
dragging = F
) %>%
addProviderTiles(providers$CartoDB.DarkMatterNoLabels) %>%
leaflet::setMaxBounds(lat1 = -85 ,
lat2 = 85 ,
lng1 = -180 ,
lng2 = 180) %>%
leaflet::setView(lat = 15 , lng = 0 , zoom = 2))
m <- leaflet(options = leafletOptions(minZoom = 0, maxZoom = 25)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lat = 15 , lng = 0 , zoom = 2)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lat = 15 , lng = 0 , zoom = 2)
m
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.DarkMatterNoLabels) %>%
setView(lat = 15 , lng = 0 , zoom = 2)
m
leaflet(options = leafletOptions(minZoom = 0, maxZoom = 18))
install.packages("maps")
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>%
addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
mapStates = map("canada", fill = TRUE, plot = FALSE)
mapStates = map("Canada", fill = TRUE, plot = FALSE)
help(package='maps')
mapStates = map("canada.cities", fill = TRUE, plot = FALSE)
mapStates = map("canada.cities", fill = TRUE, plot = FALSE)
mapStates = map(regions=sov.expand("Spain"), fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>%
addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
mapStates = map(regions=sov.expand("Canada"), fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>%
addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
leaflet(data = mapStates) %>%
addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
leaflet(data = mapStates) %>%
addTiles()
leaflet(data = mapStates) %>%
addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
leaflet(data = mapStates) %>%
addTiles() %>%
addPolygons(stroke = FALSE)
# this works, and makes a canada map - it's purple
leaflet(data = mapStates) %>%
addTiles() %>%
addPolygons(color = "#03F", stroke = FALSE)
# this works, and makes a canada map - it's purple
leaflet(data = mapStates) %>%
addTiles() %>%
addPolygons(color = "#bdd7e7", stroke = FALSE)
---
title: "Inequality Map"
author: "Megan Wylie"
date: '2019-10-02'
categories: ["R"]
tags: ["R Markdown", "plot", "regression"]
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Income inequality and health research
I wrote my Master's thesis on the topic of income inequality and health in Canadian cities. To show inequality throughout Canada, I mapped inequality levels for each Canadian city for three time periods: 2001, 2006, and 2011.
Here is a reproduction of that map, which now includes 2016.
# Map
```{r setup, fig.caption = 'Urban Inequality in Canada', include=FALSE}
#install packages
install.packages("geojsonio")
install.packages("sf")
install.packages("mapview")
install.packages("tidyverse")
#load the packages
library(tidyverse)
library(geojsonio)
library(sf)
library(mapview)
# Here I set up the Canada map from the map package
mapStates = map(regions=sov.expand("Canada"), fill = TRUE, plot = FALSE)
## Uploading Geojson file to R when file has NULL columns
#upload data
df <- geojsonio::geojson_read("data/data.geojson")
#isolate the important stuff
df<- df$features
#rename columns for later
new.names <- c(
"type" ,
names(df[[1]]$properties) ,
"geometry.type" ,
"lng" ,
"lat"
)
#Start creating datafram
point.locations <- df[[1]] %>% as.data.frame()
#Rename columns with your new names
names(point.locations) <- new.names
#Loop through every item in the geojson list
for (i in 2:length(df)) {
t <- df[[i]]$properties %>% unlist()
#Make sure the item doesn't have any null column values
if (length(t) == 12) {
out.file <- df[[i]] %>% as.data.frame()
names(out.file) <- new.names
point.locations <- dplyr::bind_rows(point.locations , out.file)
} else {
message(paste(t[["CMANAME"]] , "has NULL values."))
}
}
#Make data frame a spatial dataframe ("simple feature")
point.locations.sf <- st_as_sf(point.locations , coords = c("lng" , "lat") , crs = 3347)
#Put it on a map
mapview::mapview(point.locations.sf  , label = point.locations.sf$CMANAME)
#Put it on a map
mapview::mapview(point.locations.sf  , label = point.locations.sf$CMANAME)
#Put it on a map
mapview::mapview(point.locations.sf, label = point.locations.sf$CMANAME)
#Put it on a map
mapview::mapview(point.locations.sf, label = point.locations.sf$CMANAME)
library(tidyverse)
library(geojsonio)
library(sf)
library(mapview)
# Here I set up the Canada map from the map package
mapStates = map(regions=sov.expand("Canada"), fill = TRUE, plot = FALSE)
## Uploading Geojson file to R when file has NULL columns
#upload data
df <- geojsonio::geojson_read("data/data.geojson")
#isolate the important stuff
df<- df$features
#rename columns for later
new.names <- c(
"type" ,
names(df[[1]]$properties) ,
"geometry.type" ,
"lng" ,
"lat"
)
#Start creating datafram
point.locations <- df[[1]] %>% as.data.frame()
#Rename columns with your new names
names(point.locations) <- new.names
#Loop through every item in the geojson list
for (i in 2:length(df)) {
t <- df[[i]]$properties %>% unlist()
#Make sure the item doesn't have any null column values
if (length(t) == 12) {
out.file <- df[[i]] %>% as.data.frame()
names(out.file) <- new.names
point.locations <- dplyr::bind_rows(point.locations , out.file)
} else {
message(paste(t[["CMANAME"]] , "has NULL values."))
}
}
#Make data frame a spatial dataframe ("simple feature")
point.locations.sf <- st_as_sf(point.locations , coords = c("lng" , "lat") , crs = 3347)
#Put it on a map
mapview::mapview(point.locations.sf, label = point.locations.sf$CMANAME)
#Put it on a map
m <- mapview::mapview(point.locations.sf, label = point.locations.sf$CMANAME)
m
m
#Put it on a map
m <- mapview::mapview(point.locations.sf, label = point.locations.sf$CMANAME)
m
m
library(mapview)
m
#Put it on a map
m <- mapview::mapview(point.locations.sf, label = point.locations.sf$CMANAME)
m
point.locations.sf.transform <- sf::st_transform(point.locations.sf , 4326)
leaflet(point.locations.sf.transform) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addCircleMarkers(radius = 6 ,
color = "#3182bd" ,
fillColor = "#9ecae1" ,
fillOpacity = .6 ,
weight = 2 ,
label = ~CMANAME)
library(leaflet)
leaflet(point.locations.sf.transform) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addCircleMarkers(radius = 6 ,
color = "#3182bd" ,
fillColor = "#9ecae1" ,
fillOpacity = .6 ,
weight = 2 ,
label = ~CMANAME)
