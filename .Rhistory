tm_dots() +
st_bbox(c(xmin = 16.1, xmax = 16.6, ymax = 48.6, ymin = 47.9))
tm_shape(lso) +
tm_dots()
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
bbox(lso)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
setView(1249033,2682288,zoom=11)
library(leaflet)
install.packages(c("sf", "tmap", "tidyverse","osmdata", "gbfs", "nngeo"))
library(sf)
library(tidyverse)
library(tmap)
library(osmdata)
library(gbfs)
library(nngeo)
library(leaflet)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
setView(1249033,2682288,zoom=11)
install.packages(c("sf", "tmap", "tidyverse", "osmdata", "gbfs", "nngeo"))
install.packages(c("sf", "tmap", "tidyverse","osmdata", "gbfs", "nngeo"))
library(sf)
library(tidyverse)
library(tmap)
library(osmdata)
library(gbfs)
library(nngeo)
library(leaflet)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
setView(454693,-735813,zoom=11) #45.4693,-73.5813
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
setView(lng = 454693,lat = -735813, zoom=11) #45.4693,-73.5813
setView(map, lng = 454693,lat = -735813, zoom=11) #45.4693,-73.5813
map <- tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots()
setView(map, lng = 454693,lat = -735813, zoom=11) #45.4693,-73.5813
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() %>% setView(map, lng = 454693,lat = -735813, zoom=11) #45.4693,-73.5813
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() %>% setView(lng = 454693,lat = -735813, zoom=11) #45.4693,-73.5813
box <- st_bbox(c(454693, 454693, -735813, -735813))
tm_shape(bixi_buffer, bbox = box) +
tm_polygons() +
tm_shape(bixi) +
tm_dots()
box <- st_bbox(c(454693, 464693, -735813, -745813))
tm_shape(bixi_buffer, bbox = box) +
tm_polygons() +
tm_shape(bixi) +
tm_dots()
?bbox()
lso_geom <- filter(mtl, NOM == "Le Sud-Ouest")
coordinates(lso_geom) <- ~x+y
coordinates(lso_geom) <- ~x+y
?coordinates
library(raster)
coordinates(lso_geom) <- ~x+y
tm_view(set.bounds = 454693, -735813, 464693, -745813)
tm_shape(bixi_buffer, bbox = box) +
tm_polygons() +
tm_shape(bixi) +
tm_dots()
# need to transform to utm for distance analysis
bixi_buffer <- bixi %>%
st_transform(crs = 2959) %>%
st_buffer(100)
tm_shape(bixi_buffer, bbox = box) +
tm_polygons() +
tm_shape(bixi) +
tm_dots()
tm_view(set.bounds = 454693, -735813, 464693, -745813)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots()
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots()
# need to transform to utm for distance analysis
bixi_buffer <- bixi %>%
st_transform(crs = 2959) %>%
st_buffer(100)
#box <- st_bbox(c(454693, 464693, -735813, -745813))
#lso_geom <- filter(mtl, NOM == "Le Sud-Ouest")
#coordinates(lso_geom) <- ~x+y
#tm_view(set.bounds = 454693, -735813, 464693, -745813)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots()
#spatial subsetting
airbnb %>%
st_drop_geometry() %>%  #makes processing faster and removes unneccesary text
count(neighbourhood) %>%
arrange(desc(n))
unique(mtl$NOM)
lso <- airbnb %>%
st_transform(crs = 2959) %>%  #utm 18n
filter(st_intersects(.,
mtl %>%
st_transform(crs = 2959) %>%
filter(NOM == "Le Sud-Ouest"),
sparse = FALSE))
#turns it into an interactive map
tmap_mode("view")
tm_style("classic")
tm_shape(lso) +
tm_dots()
# need to transform to utm for distance analysis
bixi_buffer <- bixi %>%
st_transform(crs = 2959) %>%
st_buffer(100)
#box <- st_bbox(c(454693, 464693, -735813, -745813))
#lso_geom <- filter(mtl, NOM == "Le Sud-Ouest")
#coordinates(lso_geom) <- ~x+y
#tm_view(set.bounds = 454693, -735813, 464693, -745813)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots()
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
tm_view(set.view = 10)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
tm_view(set.view = 5)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
tm_view(set.view = 25)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
tm_view(set.view = 20)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
tm_view(set.view = 18)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
tm_view(set.view = 14)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
tm_view(set.view = 12)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
tm_view(set.view = 13)
# but what are bixi friendly airbnbs?
bixi_friendly_airbnbs <- airbnb %>%
st_transform(crs = 2959) %>%
st_intersection(bixi_buffer)
top10 <- mtl %>%
st_transform(crs = 2959) %>%
st_join(bixi_friendly_airbnbs) %>%
group_by(NOM) %>%
summarise(n = n(),
`median price` = median(price, na.rm = TRUE)) %>%  # to create a variable name with a space
st_drop_geometry() %>%
arrange(desc(`median price`))
head(top10, n=10)
# nearest neighbours
airbnb_close2park <- st_nn(parks %>% st_transform(crs = 2959),
bixi_friendly_airbnbs) # st_nn takes care of spatial transformations
View(airbnb_close2park)
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights") +
tm_facets("room_type")
icon <- tmap_icons("bike.png")
icon <- tmap_icons("bike.png")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights") +
tm_facets("room_type")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights") +
tm_facets("room_type")
tmap_mode("plot")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights") +
tm_facets("room_type")
tmap_mode("view")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights") +
tm_facets("room_type")
tm_shape(bixi) +
tm_symbols(shape = icon) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights") +
tm_facets("room_type")
tmap_mode("view")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights") +
tm_facets("room_type")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
#install.packages(c("sf", "tmap", "tidyverse","osmdata", "gbfs", "nngeo"))
library(sf)
library(tidyverse)
library(tmap)
library(osmdata)
library(gbfs)
library(nngeo)
library(leaflet)
# Montreal Borough Data
# save data link as object url
url <- "http://donnees.ville.montreal.qc.ca/dataset/00bd85eb-23aa-4669-8f1b-ba9a000e3dd8/resource/e9b0f927-8f75-458c-8fda-b5da65cc8b73/download/limadmin.json"
# create a temp file
temp <- tempfile()
# Download the data to the temp file; for data the are downloaded as shp, you'll need to unzip as .shp files emcompass many files in a folder. Use unzip(temp)
download.file(url, temp)
# read in data as mtl object
mtl <- read_sf(temp)
# check and plot the data. Geometry will tell you if the data are points, lines or polygons.
mtl$geometry
# Download Open Street Map (OSM) data
parks <- opq(bbox = "Montreal") %>%
add_osm_feature(key = "leisure", value = "park") %>%
osmdata_sf()
# Download Open Street Map (OSM) data
parks <- opq(bbox = "Montreal") %>%
add_osm_feature(key = "leisure", value = "park") %>%
osmdata_sf()
parks <- parks$osm_polygons
# Download airbnb data
url <- "http://data.insideairbnb.com/canada/qc/montreal/2020-01-13/visualisations/listings.csv"
# Download airbnb data
url <- "http://data.insideairbnb.com/canada/qc/montreal/2020-01-13/visualisations/listings.csv"
download.file(url, temp)
# Download Open Street Map (OSM) data
parks <- opq(bbox = "Montreal") %>%
add_osm_feature(key = "leisure", value = "park") %>%
osmdata_sf()
parks <- parks$osm_polygons
# Download airbnb data
url <- "http://data.insideairbnb.com/canada/qc/montreal/2020-01-13/visualisations/listings.csv"
download.file(url, temp)
airbnb <- read_csv(temp)
airbnb <- read_csv(temp)
airbnb <- st_as_sf(airbnb, coords = c("longitude",
"latitude"),
crs = 4326) #epsg codes - numbers that associate with coord systems
# Download Bixi bike data
get_station_information("Montreal", getwd())
bixi <- readRDS("station_information.rds")
bixi <- st_as_sf(bixi, coords = c("lon", "lat"), crs = 4326)
# union function - only keeps outline.
mtl_outline <- st_union(mtl)
# intersection - only keeps parks and Bixis on the Island of Montreal
parks <- parks %>% st_intersection(mtl_outline) # need to specify x and y - x is parks
plot(parks["osm_id"])
# make maps!
tm_shape(mtl) +
tm_polygons("TYPE", palette = "Pastel2") +
tm_shape(parks) +
tm_fill(col = "darkgreen") + #not the outline
tm_shape(bixi) +
tm_dots() +
tm_compass() +
tm_scale_bar(position = c(0.5, 0.02)) +
tm_layout(title = "Bixi Stations in MTL",
frame = FALSE) +
tm_credits("Source: OSM & Bixi")
#spatial subsetting
airbnb %>%
st_drop_geometry() %>%  #makes processing faster and removes unneccesary text
count(neighbourhood) %>%
arrange(desc(n))
tmap_mode("plot")
tm_shape(mtl) +
tm_polygons("TYPE", palette = "Pastel2") +
tm_shape(parks) +
tm_fill(col = "darkgreen") + #not the outline
tm_shape(bixi) +
tm_dots() +
tm_compass() +
tm_scale_bar(position = c(0.5, 0.02)) +
tm_layout(title = "Bixi Stations in MTL",
frame = FALSE) +
tm_credits("Source: OSM & Bixi")
#spatial subsetting
airbnb %>%
st_drop_geometry() %>%  #makes processing faster and removes unneccesary text
count(neighbourhood) %>%
arrange(desc(n))
unique(mtl$NOM)
lso <- airbnb %>%
st_transform(crs = 2959) %>%  #utm 18n
filter(st_intersects(.,
mtl %>%
st_transform(crs = 2959) %>%
filter(NOM == "Le Sud-Ouest"),
sparse = FALSE))
#turns it into an interactive map
tmap_mode("view")
tm_style("classic")
tm_shape(lso) +
tm_dots()
# need to transform to utm for distance analysis
bixi_buffer <- bixi %>%
st_transform(crs = 2959) %>%
st_buffer(100)
tm_shape(bixi_buffer) +
tm_polygons() +
tm_shape(bixi) +
tm_dots() +
tm_view(set.view = 13) #zooms in
# but what are bixi friendly airbnbs?
bixi_friendly_airbnbs <- airbnb %>%
st_transform(crs = 2959) %>%
st_intersection(bixi_buffer)
top10 <- mtl %>%
st_transform(crs = 2959) %>%
st_join(bixi_friendly_airbnbs) %>%
group_by(NOM) %>%
summarise(n = n(),
`median price` = median(price, na.rm = TRUE)) %>%  # to create a variable name with a space
st_drop_geometry() %>%
arrange(desc(`median price`))
# nearest neighbours - this geospatial analysis takes a few minutes.
airbnb_close2park <- st_nn(parks %>% st_transform(crs = 2959),
bixi_friendly_airbnbs) # st_nn takes care of spatial transformations
icon <- tmap_icons("bike.png")
tmap_mode("view")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights")
blogdown::serve_site()
tmap_mode("plot")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) + #have to unlist the close2park file
tm_dots(col = "price", size = "minimum_nights")
tmap_mode("view")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) +
tm_dots(col = "price", size = "minimum_nights")
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) +
tm_dots(col = "price", size = "minimum_nights")
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) +
tm_dots(col = "price")
# if you want to add an icon
icon <- tmap_icons("bike.png")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) +
tm_dots(col = "price")
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) +
tm_dots(col = "price") +
tm_view(set.view = 13) #zooms in
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) +
tm_dots(col = "price") +
tm_view(set.view = 14) #zooms in
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) +
tm_dots(col = "price") +
tm_view(set.view = 14) #zooms in
tm_shape(bixi) +
tm_symbols(shape = icon, size = 0.1) +
tm_shape(parks) +
tm_fill(col = "green") +
tm_shape(bixi_friendly_airbnbs[unlist(airbnb_close2park),]) +
tm_dots(col = "price")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
#install.packages(c("sf", "tmap", "tidyverse","osmdata", "gbfs", "nngeo"))
library(sf)
library(tidyverse)
library(tmap)
library(osmdata)
library(gbfs)
library(nngeo)
library(leaflet)
airbnb_close2park <- readRDS("airbnb_close2park")
airbnb_close2park <- readRDS(airbnb_close2park)
airbnb_close2park <- readRDS(file = airbnb_close2park)
library(rstan)
install.packages("rstan")
library(rstan)
airbnb_close2park <- readRDS(file = airbnb_close2park)
airbnb_close2park <- readRDS("airbnb_close2park")
airbnb_close2park <- readRDS(file = "airbnb_close2park")
airbnb_park <- readRDS(file = "airbnb_close2park")
airbnb_park <- readRDS(file = "airbnb_close2park")
airbnb_park <- readRDS(file = "/Users/new/Documents/Personal-Website/content/post/airbnb_close2park")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
airbnb %>%
st_drop_geometry() %>%  #makes processing faster and removes unneccesary text
count(neighbourhood) %>%
arrange(desc(n))
airbnb %>%
st_drop_geometry() %>%  #makes processing faster and removes unneccesary text
count(neighbourhood) %>%
arrange(desc(n))
unique(mtl$NOM)
lso <- airbnb %>%
st_transform(crs = 2959) %>%  #utm 18n
filter(st_intersects(.,
mtl %>%
st_transform(crs = 2959) %>%
filter(NOM == "Le Sud-Ouest"),
sparse = FALSE))
# Turns it into an interactive map
tmap_mode("view")
tm_style("classic")
tm_shape(lso) +
tm_dots()
airbnb %>%
st_drop_geometry() %>%  #makes processing faster and removes unneccesary text
count(neighbourhood) %>%
arrange(desc(n))
blogdown:::new_post_addin()
